apiVersion: apps/v1
kind: Deployment
metadata:
  name: timeseries
  namespace: backend
spec:
  replicas: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: timeseries
  template:
    metadata:
      labels:
        app: timeseries
    spec:
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "2"
      containers:
      - name: timeseries
        image: optimove-timeseries:0.0.10
        env:
        - name: OIDC_HOST
          valueFrom:
            configMapKeyRef:
              name: timeseries-config
              key: OIDC_HOST
        - name: OIDC_REALM
          valueFrom:
            configMapKeyRef:
              name: timeseries-config
              key: OIDC_REALM
        - name: TIMESERIES_PORT
          valueFrom:
            configMapKeyRef:
              name: timeseries-config
              key: TIMESERIES_PORT
        - name: INFLUXDB_USER
          valueFrom:
            configMapKeyRef:
              name: timeseries-config
              key: INFLUXDB_USER
        - name: INFLUXDB_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: timeseries-config
              key: INFLUXDB_HOSTNAME
        - name: INFLUXDB_ORG
          valueFrom:
            configMapKeyRef:
              name: timeseries-config
              key: INFLUXDB_ORG
        - name: INFLUXDB_BUCKET
          valueFrom:
            configMapKeyRef:
              name: timeseries-config
              key: INFLUXDB_BUCKET
        - name: INFLUXDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: timeseries-secret
              key: INFLUXDB_PASSWORD
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          limits:
            memory: "512Mi"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config/application.yml
          subPath: application.yml
        ports:
        - containerPort: 8080
      volumes:
      - name: config-volume
        configMap:
          name: timeseries-application-config
      initContainers:
      - name: wait-for-gateway
        image: busybox
        command: ['sh', '-c', 'until nc -z gateway.default.svc.cluster.local 8080; do echo waiting for gateway; sleep 2; done;']
